#summary Supress security prompt or change the digital signature publisher name
#labels Featured,Phase-Deploy

= Introduction =

This explains how to change the digital signature inside jZebra to suppress the security prompt (requires a purchased Verisign, Thawte, etc applet certificate).

If you cannot afford a trusted certificate, you will find the steps for changing the publisher name -- useful for re-branding purposes -- at the bottom of this page.

*Edit 4/5/2011:*  These instructions seemed to work for a recent emailer.  Will adopt them into a better format shortly. -Tres
  || Open command prompt (Assumes Windows 7)
Type:
&gt; cd %PROGRAMFILES%\Java\jdk1*\bin
Type:
&gt; keytool -import -alias skepr -file %USERPROFILE%\Documents\intca.cer -keystore %USERPROFILE%\Documents\skepr.ks
Since the keystore doesn't yet exist, it will be created, and you will be prompted for a keystore password; type whatever password you want.  This will later be entered into NetBeans.  For the purposes of this tutorial we will use password of "randomaccess123".
Copy skepr.ks to the root of your jZebra project folder (probably %US
ERPROFILE%\Documents\NetBeansProjects\jZebra)
If not already, open NetBeans (Version 6.8+).  Make sure Java Web Start is enabled in project properties.
Navigate to Files in upper left (if hidden, CTRL + 2)
Expand nbproject folder.  Double click jnlp-impl.xml.
Scroll to the section that says "&lt;!-- Custom - Modified by Tres Finocchiaro 12/8/2010 --&gt;" (Alternately, you can CTRL+F to search for "tres")
Change &lt;property name="jnlp.signjar.keystore" value="${basedir}/jzebra.ks"/&gt;  to
&lt;property name="jnlp.signjar.keystore" value="${basedir}/skepr.ks"/&gt;
Change &lt;property name="jnlp.signjar.storepass" value="**********"/&gt;  to
&lt;property name="jnlp.signjar.storepass" value="randomaccess123"/&gt;
Change &lt;property name="jnlp.signjar.keypass" value="**********"/&gt;  to
&lt;property name="jnlp.signjar.storepass" value="randomaccess123"/&gt;
Change &lt;property name="jnlp.signjar.alias" value="jzebra"/&gt;  to
&lt;property name="jnlp.signjar.alias" value="skepr"/&gt;
Note #1:  If prompted for two passwords, I'm not sure exactly which is which, since the tutorial only addresses one of them.  This will need clarification.
Note #2:  Jarsigner.exe should not be called directly, as a version of it is included in javawebstart.anttasks.SignJarsTask (NetBeans uses it for Java Web Start, we are exploiting it's Jar Signing capabilities)  
Note #3:  Verification for clients:   The keytool command will print out the certificate information and ask you to verify it, for example, by comparing the displayed certificate fingerprints with those obtained from another (trusted) source of information. For example, customers might call up Skepr and ask what the fingerprints should be. You can get the fingerprints of the intca.cer file by executing the command:
&gt; cd %PROGRAMFILES%\Java\jdk1*\bin
&gt; keytool -printcert -file %USERPROFILE%\Documents\intca.cer
Note #4:  At some point Oracle made a change to the keytool command.  It seems JDK 1.6.x uses "keytool -importcert" instead of JDK 1.5.x  "keytool -import".  The tutorial version should be backwards compatible.  This will need clarification. ||

= Suppress Security Prompt =
  || *Note:* This tutorial requires jZebra source to be recompiled so that the Java Archive (jar) is digitally signed with a trusted certificate. ||
  # First obtain instructions from your certificate provide on digitally signing Java Applets.  Verisign, Thawte, etc should provide you with the necessary instructions to generate a Java Keystore (ks) file. 
  # Second, download and install the latest bundled version of Java Development Kit & NetBeans.  Example:  [http://www.oracle.com/technetwork/java/javase/downloads/jdk-netbeans-jsp-142931.html "JDK 6 Update 24 with NetBeans 6.9.1"].  Registration is optional and can be skipped.
  # Third (also optional), download the legacy JDK (version 1.5) and register it with the NetBeans IDE.  This provides backwards compatibility for PPC Macintosh computers and usually isn't needed on Windows or Linux computers.
   # Download and install the [http://www.oracle.com/technetwork/java/javase/downloads/index-jdk5-jsp-142662.html Java 1.5 JDK] taking defaults.
   # Register the JDK using Tools, Java Platforms, Add, and navigate to C:\Program Files\Java\jdk1.5.0_22 (or latest).
  # Open the project in NetBeans
   # Download the latest [http://code.google.com/p/jzebra/downloads/list?q=label:NetBeans jZebra source]
   # Extract the contents to the NetBeans project folder (Usually "My Documents/NetBeansProjects", or "home/NetBeansProjects") in a folder called "jZebra"
   # With NetBeans open, import the project using File, Open and browse for the newly created "jZebra" folder.
   # In the top left "Projects" pane, you should see a red coffee cup with the word "jzebra" next to it.
    || *Note:*  If "Projects" does not appear in NetBeans, hit CTRL + 1 to make it visible. ||
   # If jzebra appears to be in error (exclamation mark), you may need to change the target platform to the correctly installed JDK:
    # Right-click "jzebra", Properties, Libraries.  Click "JDK 1.5" (if installed) or "JDK 1.6 Default".
    # Click OK
   # By default jZebra uses "jzebra.ks" for it's KeyStore.  To use an alternate KeyStore, drag it in to the "Files" panel.  
    || *Note:*  If "Files" does not appear in NetBeans, hit CTRL + 2 to make it visible. Alternately, you can copy it to "NetBeansProjects/jZebra" ||
   # The KeyStore requires four fields: A file name, a store password, a key password and an alias name to be entered.  The compiler will do this automatically so as long as the values are defined in "NetBeansProjects\jZebra\nbprojects\jnlp-impl.xml" as `jnlp.signjar.keystore`, `jnlp.signjar.storepass`, `jnlp.signjar.keypass`, `jnlp.signjar.alias` respectively.
    || *Note:* Be careful as not to break the formatting of the html file. ||
   # Click the [http://2.bp.blogspot.com/_9hmP3Ho0t14/S3CbTCYXxqI/AAAAAAAAAY4/AOvjXs3cgec/s400/Picture+10.png] Hammer + Broom icon to do a clean build.
   # Find your newly created and signed JAR file in your source folder in a folder called "dist" ("NetBeansProjects\jZebra\dist\jZebra.jar")
   # Deploy the new jar to a test web location.
   # Email tres.finocchiaro@gmail.com with questions/comments in this process.
= Change Applet Branding =

If you are NOT using a [http://en.wikipedia.org/wiki/Root_certificate root certificate] to sign jZebra it (Verisign, Thawte, etc), here are the steps to simply change the publisher name when prompted by the Security Dialog:

  # Download the [http://netbeans.org/downloads/ latest version of Netbeans] (The *Java SE* version is sufficient).
  # Install Netbeans taking defaults.  Registration is optional and can be skipped.
  # Download the [http://code.google.com/p/jzebra/downloads latest source code]
  # Extract source to a folder.
  # In Netbeans, click:  *Project --&gt; Open Project --&gt; &lt;browse to the extracted source code&gt;*  The icon should look like a red coffee cup.
  # On the left "Projects" pane, *Right Click* the red coffee cup "jZebra" and click *Properties*
  # Click *Application* from the list on the left.
  # Change vendor from "Tres Finocchiaro" to &lt;Name of Company&gt; and click OK to close the dialog.
  # Click the [http://2.bp.blogspot.com/_9hmP3Ho0t14/S3CbTCYXxqI/AAAAAAAAAY4/AOvjXs3cgec/s400/Picture+10.png] Hammer + Broom icon to do a clean build.
  # Find your newly created and signed JAR file in your source folder in a folder called "dist".



-Tres


|| Please choose your certificate provider wisely.  jZebra is not affiliated with Verisign or Thawte. ||