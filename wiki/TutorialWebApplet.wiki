#summary Using jZebra as a Web Applet component
#labels Featured,Phase-Deploy,Phase-Support

= Introduction =
This is a step-by-step tutorial that walks a web developer through creating a *html web applet* capable of sending raw commands directly to a printer through a Java Applet + JavaScript commands.

*This is a new tutorial for version 1.0.4 and higher.  For version 1.0.3, see the legacy tutorial [TutorialWebApplet_Legacy]*

For a quickstart,  download and extract the [http://code.google.com/p/jzebra/downloads/list latest version] and examine the applet code inside the provide sample html.

*TODO:  Update Preview Screenshot*
  || [http://2.bp.blogspot.com/_9hmP3Ho0t14/SveEeR-bCPI/AAAAAAAAAVo/6YIGLK_GGZo/s1600/xp_ie7.PNG http://2.bp.blogspot.com/_9hmP3Ho0t14/SveEeR-bCPI/AAAAAAAAAVo/6YIGLK_GGZo/s200/xp_ie7.PNG] ||

  || *Note:* jZebra requires Java 5 or higher to run.  For help installing Java on your platform, see the [http://img132.imageshack.us/img132/3416/cup1ad7.png][TutorialJavaInstall Java tutorial]. ||

----
= Steps =
== Load The Applet ==
  # Make sure your printer is set up on your workstation with the name "zebra" (this can be changed later).
  # Make sure printer is connected as a raw print queue for your operating sytem (Click the Windows, Ubuntu, or Mac logo for details)
    [http://code.google.com/p/jzebra/wiki/TutorialRawXP#Steps http://3.bp.blogspot.com/_9hmP3Ho0t14/SvXbFLIbfXI/AAAAAAAAAUQ/EmPDrWLk7YI/s400/config_win.png][http://code.google.com/p/jzebra/wiki/TutorialRawUbuntu#Steps http://4.bp.blogspot.com/_9hmP3Ho0t14/SvXbE4Sp39I/AAAAAAAAAUI/dvvUZ_sJNQA/s400/config_lin.png][http://code.google.com/p/jzebra/wiki/TutorialRawOSX#Steps http://2.bp.blogspot.com/_9hmP3Ho0t14/SvXbE_kTK_I/AAAAAAAAAUA/a-Ucl9UaIvI/s400/config_mac.png]http://2.bp.blogspot.com/_9hmP3Ho0t14/SvXbEnoMELI/AAAAAAAAAT4/eF4xkJ68ALY/s400/config_end.png
  # Download the [http://code.google.com/p/jzebra/downloads/list latest version] and extract the contents to your desktop.  Open "sample.html" with a web browser.
   * The following applet code creates the applet.
    {{{
    <html><body>
       <applet name="jZebra" code="jzebra.RawPrintApplet.class" archive="./jzebra.jar" width="100" height="100">
          <param name="sleep" value="200">
       </applet><br><br>
    </html></body>
    }}}
   * The html file should reside in the same folder as `jzebra.jar`.  Alternately, you can move the JAR to a different location so long as you change `archive="./jzebra.jar"` to match your new location.
   || *Note:* IE7 may receive an ActiveX warning. Click "Allow Blocked Content"<br><br> http://2.bp.blogspot.com/_9hmP3Ho0t14/SxgmMqgJQAI/AAAAAAAAAW4/WBkVhYcg4no/s400/blocked_content.png ||
   || *Note:* IE7 may be prompt to Click to Activate This Control each time the applet loads.  Click [http://www.mix-fx.com/flash-prompt.htm here] for details. ||
  #  The applet will begin to load in the web page.
     [http://2.bp.blogspot.com/_9hmP3Ho0t14/SxgoGt3lmKI/AAAAAAAAAXA/jsqVvrlRl4k/s400/applet_loading.PNG]
  #  Next, Java security dialog prompt is shown.  Click "Run".
   [http://1.bp.blogspot.com/_9hmP3Ho0t14/Sxg0XxeTomI/AAAAAAAAAXI/rStKpFiZuU8/s400/digital_signature.PNG]
  #  The applet should be loaded.  At this point it will look like a plain html page with a few sample buttons.
     [http://lh3.ggpht.com/_9hmP3Ho0t14/TSPsD0Os6UI/AAAAAAAAAe0/mjfCFn4asEI/s400/1.0.8%20screenshot.png]
  #  Right click the Java system tray icon (Windows) and clicking "[http://img74.imageshack.us/img74/2423/jzebrajava1tx5.png Open Java Console]".  Linux users run: `jcontrol` --> Advanced --> Java Console --> Show Console.
  || *Note:* The Java Console is critical for calibrating jZebra for your printer. ||
  #  You should see the version of jZebra followed by `===== JAVASCRIPT LISTENER THREAD STARTED =====` in the log.  Sample:*
    {{{
       Java Plug-in 1.6.0_17
       Using JRE version 1.6.0_17-b04 Java HotSpot(TM) Client VM
       User home directory = C:\Documents and Settings\tfino
       
       ----------------------------------------------------
       c:   clear console window
       f:   finalize objects on finalization queue
       g:   garbage collect
       h:   display this help message
       l:   dump classloader list
       m:   print memory usage
       o:   trigger logging
       q:   hide console
       r:   reload policy configuration
       s:   dump system and deployment properties
       t:   dump thread list
       v:   dump thread stack
       x:   clear classloader cache
       0-5: set trace level to <n>
       ----------------------------------------------------
       
       Dec 3, 2009 5:03:33 PM jzebra.LogIt log
       INFO: jZebra 1.0.4
       Dec 3, 2009 5:03:33 PM jzebra.LogIt log
       INFO: ===== JAVASCRIPT LISTENER THREAD STARTED =====
    }}}
  #  Your applet has now been loaded into the web browser.  See [Printing] for printer discovery and for sending print commands directly to your printer. 

== Printing ==
  # jZebra's parameters are set through JavaScript commands.
  # First, insert this JavaScript code to search for a printer named "zebra":
   {{{
      <script>
      function findPrinter() {
         document.jZebra.findPrinter("zebra");
      }
      </script>
  }}}
  # Second, add html code for a *Find Printer* button (after `</applet><br><br>` code):
   {{{
      <input type=button onClick="findPrinter()" value="Detect Printer"><br><br>
   }}}
  # Third, test "print.html"
   *  Load page in web browser and click "Find Printer" button.
   *  View Java console for output.  Look for `"INFO: Printer found..."`
   *  *TODO:  Find Printer Button Screenshot*
  # Fourth, insert this JavaScript code to send commands to printer (Don't forget NewLine)
   * JavaScript Code: (Example)
   {{{
      function print() {
         // Hint:  Carriage Return = "\r", New Line = "\n" 
         document.jZebra.append("A37,503,0,1,2,3,N,ABC WIDGET CO\n");

         // Send Commands to Printer
         document.jZebra.print();
      }
   }}}
   || *Note:* The raw commands provided in the sample are not intended for use with your printer, they're provided as an example. ||
  #  Next, add html code for a *Print* button (after `"Detect Printer"><br><br>` code):
   {{{
       <input type=button onClick="print()" value="Print"><br><br>
   }}}
  #  Last, test "print.html"
   *  Load page in web browser and click "Find Printer" button
   *  Click "Print" button
   *  *TODO:  Print Button Screenshot*
   *  *TODO:  Console Output Screenshot*
   *  View Java console for output
  #  If problems exist, try the included *sample.html* or email the [mailto:tres.finocchiaro@gmail.com author].

=== php Printing ===
  #  If you would rather use php, replace `print()` function with this code:
   {{{
      function print() {
         document.jZebra.append(<?php echo $commands; ?>);

         // Send Commands to Printer
         document.jZebra.print();
      }
   }}}

=== Base64 Printing ===
  #  If print data is base64 encoded, replace `print()` function with this code:
   {{{
      function print() {
         document.jZebra.append64("SEVMTE8hICBZT1UgQVJFIFJFQURJTkcgQSBERUNPREVE");
         document.jZebra.append64("IEJBU0U2NCBNRVNTQUdFIFNFTlQgRlJPTSBKWkVCUkEu");

         // Send Commands to Printer
         document.jZebra.print();
      }
   }}}

=== Printing Special Characters ===
  #  If special escape characters need to be printed, use the char code:
   {{{
      function print() {
         // CHR(27) + CHR(29)
         document.jZebra.append(String.fromCharCode(27) + String.fromCharCode(29));

         // HEX
         document.jZebra.append("\x00\x01\x02\xFF");

         // Send Commands to Printer
         document.jZebra.print();
      }
   }}}

=== Advanced Print Spooling ===
  #  Since version 1.0.6, jZebra has the ability to control spooling to the printer.  For example:  If 90 labels are printed and the printer runs out of paper, the printer will automatically print all 90 labels again.  This feature allows to print in batches of 5, 10, etc.
   {{{
      function print() {

         // The end of a label, in this case  P1 plus a newline character
         document.jZebra.setEndOfDocument("P1\n");
           
         // The amount of labels to spool to the printer at a time
         document.jZebra.setDocumentsPerSpool("10");      

         // Send Commands to Printer
         document.jZebra.print();
      }
   }}}

See also `sample.html`, section "printPages()".

=== XML Printing ===

  #  Since version 1.0.8, jZebra has the ability to read the contents of an XML file containing Base64 encoded commands and send these commands to the printer. The function requires two parameters, the URL of the XML file and the tagname containing the Base64 encoded text.
   {{{
      function printXML() {
         // applet.appendXML("http://yoursite.com/zpl.xml", "tagornode");
         // "v7:image" would appear in the XML as <v7:Image></v7:Image>
         document.jZebra.appendXML("C:\\zpl.xml", "v7:Image");
         document.jZebra.print();
      }

   }}}

See also `sample.html`, section "printXML()".

=== End of Tutorial ===

== Conclusion ==
  This tutorial needs work.  Please help by submitting changes.  Email questions or suggestions to [mailto:tres.finocchiaro@gmail.com the author].