#summary Using jZebra as a Web Applet component
#labels Featured,Phase-Deploy,Phase-Support
|| <img align="middle" src="http://img413.imageshack.us/img413/4710/firefox2ie7nn0.gif"> *[TutorialWebApplet Web Applet]* ||  <img align="middle" src="http://img413.imageshack.us/img413/9843/toggledesktopes0.png"> [TutorialDesktopApplication Desktop Application] || <img align="middle" src="http://img413.imageshack.us/img413/6632/terminal1mq3.png"> [TutorialConsoleApplication Console Application] || <img align="middle" src="http://4.bp.blogspot.com/_9hmP3Ho0t14/Sveb2dQ1H6I/AAAAAAAAAV4/-f-r_lZzLWQ/s400/Properties-48x48.png"> [TutorialStaticParameters Common Parameters] ||

= Introduction =
This is a step-by-step tutorial that walks a web developer through creating a *basic html web applet* capable of sending raw commands directly to a printer. Once the applet has been configured, you will most likely use *php*, perl, asp or any web language to dynamically create the applet/object tags for you.  At this stage of development, only html samples are available.

If you are already familiar with creating java web applets as well as specifying applet parameters and would like to skip this tutorial, simply download and extract the [http://code.google.com/p/jzebra/downloads/list latest version] and examine the applet code inside the provide sample html.  If you find this product useful or can offer sample php, perl, asp, etc, please email [mailto:tres.finocchiaro@gmail.com the author].

|| jZebra running in IE7 ||
|| [http://2.bp.blogspot.com/_9hmP3Ho0t14/SveEeR-bCPI/AAAAAAAAAVo/6YIGLK_GGZo/s1600/xp_ie7.PNG http://2.bp.blogspot.com/_9hmP3Ho0t14/SveEeR-bCPI/AAAAAAAAAVo/6YIGLK_GGZo/s200/xp_ie7.PNG] ||

----
= Installing Java =

Java 5 Runtime or higher is required on the clients to use jZebra as a web applet.  Click [http://img132.imageshack.us/img132/3416/cup1ad7.png]TutorialJavaInstall for help installing Java on your platform.

----
= Creating a Basic Web Applet =

First, make sure your printer is set up on your workstation with the name "zebra".  For step-by-step instructions:  [http://code.google.com/p/jzebra/wiki/TurorialRawXP Windows], [http://code.google.com/p/jzebra/wiki/TutorialRawOSX OS X], [http://code.google.com/p/jzebra/wiki/TurorialRawUbuntu Ubuntu]

Now download the latest [http://img104.imageshack.us/img104/9696/packagept0.png]`jZebra_x.x.x.zip` from [http://img242.imageshack.us/img242/5678/diskmultiplebx6.png][http://code.google.com/p/jzebra/downloads/list downloads] and extract the contents to your desktop.  
   * Make sure to extract the entire contents at once so that the folder and file structure stays in tact.
   * Locate the html sample file and open it with a text editor.  Windows users can use *[http://img174.imageshack.us/img174/2286/notepadle4.gif]notepad*.  Linux users can use *[http://img174.imageshack.us/img174/6650/accessoriestexteditor16ol7.png]gedit* (Ubuntu calls this "*[http://img174.imageshack.us/img174/6650/accessoriestexteditor16ol7.png]Text Editor*").  This should be called "[http://img74.imageshack.us/img74/2484/post997051213609968km7.png]`preview-application.html`".  Look over the applet code quickly to get comfortable with the parameters.
   * Close out "[http://img74.imageshack.us/img74/2484/post997051213609968km7.png]`preview-application.html`" and use the same text editor to make a new file.  Start by inserting the code to create the applet.
{{{
<html><body>
   <applet code="jzebra.JZebraApplet.class" archive="./jzebra.jar" width="200" height="25">
      <param name="buttontext" value="Sample button">
   </applet>
</html></body>
}}}
  * Save the file in the same folder as [http://img104.imageshack.us/img104/9696/packagept0.png]`jzebra.jar` and open the file with the browser of your choice.

|| <h3>Important</h3>IE7 may be prompt to "[http://www.mix-fx.com/flash-prompt.htm Click to Activate This Control]" each time the applet loads.  Work-arounds exist, but for the purpose of this tutorial Firefox or IE6 is recommended.<br><br>If you do not have a printer named "zebra", then you will have a "*SEVERE: Printer not found*" in your log.  To fix this, create a dummy printer with "zebra" in the name as a place holder for the purpose of learning this applet.  "zebra fake" as a printer name works for now.  Windows and Linux both allow this.<br><br>The raw commands provided in the sample are not intended for use with your printer, they're provided as an example.  You will be changing these commands for your printer in the steps following. ||

  *  The applet will begin to load in the web page.
[http://img132.imageshack.us/img132/3484/javaloadingca2.png]
  *  Next, Java security dialog prompt is shown.  This is Java's way of warning that the Web Applet has access to local resources.  jZebra needs local access to the workstation's printers, so click "Run".
[http://img132.imageshack.us/img132/6508/jzebrasecuritydialogip3.png]
  *  Your "Sample button" should have loaded.  If the browser stops responding or the applet never loads, check to make sure files were extracted correctly and that the archive is set properly in the html.
  *  Click the "Sample button".  It will most likely do nothing, this is normal.  What is important is that the output is checked in the Java console. Windows users can enable this by right clicking the Java system tray icon and clicking "[http://img74.imageshack.us/img74/2423/jzebrajava1tx5.png Open Java Console]".  Linux users, email [mailto:tres.finocchiaro@gmail.com the author] if you've found a way to display a similar console.
  *  The Java Console is critical for calibrating the applet for your printer.
  *  If you already have a Zebra printer attached to your station, the applet will try to automatically use it by searching for the name "zebra" in all of your attached printers and will select the first match. Look for "INFO:  Printer found...". (This can later be changed using TutorialStaticParameters)
[http://img518.imageshack.us/img518/4696/jzebraprinterfoundfb0.png]
  *  Look in the Java console log for something like the screenshot below.  You should see the default raw commands that jZebra ships with.  These will most likely look a bit foreign to you, that's normal.  The supplied commands are EPL commands.  We'll change them to something your printer can use in the steps following.
[http://img443.imageshack.us/img443/2775/jzebrajava2gh7.png]

----
= Sending Raw Commands To The Printer =
jZebra takes a number of [TutorialStaticParameters static parameters] in order to load the right settings for your printer.

|| What does static mean?  Well, in this sense, it means parameters (or "switches") that NEED to be set.  If they aren't set, jZebra uses it's defaults instead.  It is important to visit the [TutorialStaticParameters wiki] to learn them and their default values. ||

Assuming your printer is attached and set up as a "Generic/Text Only" printer _(don't use the vendor supplied driver, use plain text mode instead)_ we're now ready to print some raw commands.  To get something to print, three parameters need to be added to the web applet.  *`CONFIGTYPE`*, *`CONFIGPATH`*, *`LINEFEED`*.  For an exhaustive list, see TutorialStaticParameters.
  * *`CONFIGTYPE`*:  Set this to "*FILE*" with the following parameter: _(this can later be changed to a web url using "url")_
{{{
      <param name="configtype" value="file">
}}}
  * *`CONFIGPATH`*:  Set this to a location on your hard drive.  Windows users should use a location that's simple for now, such as the root of C:\.  Linux users should place this in the user's home directory.
{{{
      <param name="configpath" value="c:\test.txt">
}}}
  * Create the config file with notepad (or equivalent), and add some raw commands of your choice.  Follow your EPL/ZPL/ZPLII (or printer language) guide and keep it simple for now.
  * *`LINEFEED`*:  In order for your printer to separate the raw commands, you must send a linefeed that corresponds with your printer language.

_*Note:*  Newline is "\n", Carriage Return is "\r".  Your printer may need any combination of these or other characters.  If unsure, visit your printer programming manual. If other escape sequences are needed, search for the java equivalent online and replace._
{{{
       <param name="linefeed" value="\n">
}}}

  * If done correctly, you should now have your web applet printing.  If the raw print file(s) is always supplied verbatim by another program/service, you are basically finished.  However, if you are generating the raw commands through web code and need to perform variable substitution (like to generate some of the print commands dynamically on-the-fly) the next step is substitution of print commands using the wildcard "$" in your config.  This allows easy substitution for batch printing, where only a few attributes change upon each print.  Read below for more information.

----
= Command Substitution =
  * jZebra allows any word in a config file to be replaced through applet code.  

|| Substitute what? In order for jZebra to work right for YOUR purposes, you'll eventually want to leverage the Command Substitution steps below, which allow specific parts of the config to be substituted with your own values. ||

  * For example, if only the name, address, and barcode change between prints, they may be specified through parameters rather than generating a new config file each time.  To perform substitution of print commands, simply place a "*$*" dollar sign infront of a variable in your config file.  These substitutions were illustrated in our sample above.  This example will replace the "*$FIRSTNAME*" variable in red.

http://img443.imageshack.us/img443/3849/jzebracommandreplaceji3.png
  * Name your variables as you wish so as long as they match your html applet code as follows:
{{{
      <param name="FIRSTNAME" value="TRES">
}}}

_This will replace all occurrences of *`$FIRSTNAME`* with the applet value specified *`TRES`*.  Notice the dollar sign is only used in the config file.  The dollar sign should not be used in your HTML code. Click the "Sample button" and the console output should now reflect the following.  Notice `$FIRSTNAME` has changed, but `$LASTNAME` is left unchanged.  If jZebra can't find the parameter in your html, it leaves it as is!

http://img443.imageshack.us/img443/6216/jzebracommandreplace2jz6.png

  * Continue this substitution process with any values that may change from print to print such as account numbers or bar code values, etc.
----

= Creating a php Web Applet =

Thanks to James at Reason Transport for this php snippet:

{{{
   <applet code="jzebra.JZebraApplet.class" archive="<?php echo $imgdir; ?>/jzebra.jar" width="138" height="25">
      <param name="config" value="<?php echo $depurl; ?>/test">
      <param name="autoprint" value="true">
      <param name="printer" value="zebra">
      <param name="showicon" value="false">
      <param name="linefeed" value="\n">
      <param name="showmessages" value="false">
   </applet>
}}}

= Conclusion =

This illustrates the basic functionality of jZebra in applet mode.  To explore advanced features, revisit the source code of "[http://img74.imageshack.us/img74/2484/post997051213609968km7.png]`preview-application.html`", see a full list of available commands here: TutorialStaticParameters, or additionally you may email questions or suggestions to [mailto:tres.finocchiaro@gmail.com the author].